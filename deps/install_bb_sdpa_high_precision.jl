# This is copied from the `build.jl` file from SDPA_GMP_Builder
# https://github.com/ericphanson/SDPA_GMP_Builder/releases/download/v7.1.2
function install_bb_sdpa_high_precision(prefix, verbose)
    products = Product[
        ExecutableProduct(prefix, "sdpa_gmp", :sdpa_gmp),
        ExecutableProduct(prefix, "sdpa_qd", :sdpa_qd),
        ExecutableProduct(prefix, "sdpa_dd", :sdpa_dd),
    ]
    
    # Download binaries from hosted location
    bin_prefix = "https://github.com/ericphanson/SDPA_GMP_Builder/releases/download/v7.1.2"
    
    # Listing of files generated by BinaryBuilder:
    download_info = Dict(
        MacOS(:x86_64) => ("$bin_prefix/SDPA_GMP-QD-DD_Builder.v7.1.2.x86_64-apple-darwin14.tar.gz", "4c066054ecbf1d4c21776d8d5be7e39ba8c910eac9cdb50c13fb174293c77317"),
        Linux(:x86_64, libc=:glibc) => ("$bin_prefix/SDPA_GMP-QD-DD_Builder.v7.1.2.x86_64-linux-gnu.tar.gz", "00797cc2bfa48539efe98bbe8f6b1748ad0f97a276a75947174fb689a51c85ac"),
    )
    
    # Install unsatisfied or updated dependencies:
    unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
    dl_info = choose_download(download_info, platform_key_abi())
    if dl_info === nothing && unsatisfied
        # If we don't have a compatible .tar.gz to download, complain.
        # Alternatively, you could attempt to install from a separate provider,
        # build from source or something even more ambitious here.
        error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
    end
    
    # If we have a download, and we are unsatisfied (or the version we're
    # trying to install is not itself installed) then load it up!
    if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
        # Download and install binaries
        install(dl_info...; prefix=prefix, force=true, verbose=verbose)
    end

    return products
end
